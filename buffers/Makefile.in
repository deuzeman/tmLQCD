
srcdir = @srcdir@
top_builddir =  @top_builddir@
abs_top_builddir = @abs_top_builddir@
top_srcdir = @top_srcdir@
abs_top_srcdir = @abs_top_srcdir@
subdir = buffers
builddir = @builddir@

CFLAGS = @CFLAGS@
DEPFLAGS = @DEPFLAGS@
LDFLAGS = @LDFLAGS@
DEFS = @DEFS@
OPTARGS = @OPTARGS@

AR = ar
RANLIB = @RANLIB@
CC = @CC@
CCDEP = @CCDEP@
CCLD = $(CC)
LINK = $(CCLD) $(CFLAGS) $(LDFLAGS) ${OPTARGS} -o $@
LEX = @LEX@
AUTOCONF = @AUTOCONF@
DEFS = @DEFS@

INCLUDES = @INCLUDES@
LDADD =
COMPILE = ${CC} ${DEFS} ${INCLUDES} ${CFLAGS} ${OPTARGS}

LIBRARIES = libbuffers

libbuffers_TARGETS = 	adjoint \
			adjoint_allocate_adjoint_buffers \
			adjoint_finalize_adjoint_buffers \
			adjoint_free_unused_adjoint_buffers \
			adjoint_get_adjoint_field \
			adjoint_get_adjoint_field_array \
			adjoint_initialize_adjoint_buffers \
			adjoint_return_adjoint_field \
			adjoint_return_adjoint_field_array \
			complex \
			complex_allocate_complex_buffers \
			complex_finalize_complex_buffers \
			complex_free_unused_complex_buffers \
			complex_get_complex_field \
			complex_get_complex_field_array \
			complex_initialize_complex_buffers \
			complex_return_complex_field \
			complex_return_complex_field_array \
			gauge \
			gauge_allocate_gauge_buffers \
			gauge_finalize_gauge_buffers \
			gauge_free_unused_gauge_buffers \
			gauge_get_gauge_field \
			gauge_get_gauge_field_array \
			gauge_initialize_gauge_buffers \
			gauge_return_gauge_field \
			gauge_return_gauge_field_array \
			real \
			real_allocate_real_buffers \
			real_finalize_real_buffers \
			real_free_unused_real_buffers \
			real_get_real_field \
			real_get_real_field_array \
			real_initialize_real_buffers \
			real_return_real_field \
			real_return_real_field_array \
			spinor \
			spinor_allocate_spinor_buffers \
			spinor_finalize_spinor_buffers \
			spinor_free_unused_spinor_buffers \
			spinor_get_spinor_field \
			spinor_get_spinor_field_array \
			spinor_initialize_spinor_buffers \
			spinor_return_spinor_field \
			spinor_return_spinor_field_array \
			utils_generic_exchange

libbuffers_OBJECTS = $(addsuffix .o, ${libbuffers_TARGETS})

# default rule

all: Makefile dep libbuffers.a

# rules for debugging
debug all-debug: CFLAGS := $(CFLAGS) @DEBUG_FLAG@
debug all-debug: all

# rules for profiling information
profile all-profile: CFLAGS := $(filter-out -fomit-frame-pointer,${CFLAGS}) @PROFILE_FLAG@
profile all-profile: all


#include dep rules


-include $(addsuffix .d,${libbuffers_TARGETS})

include ${top_srcdir}/Makefile.global

# rule to compile objects

%.o: ${srcdir}/%.c %.d Makefile ${abs_top_builddir}/config.h
	$(COMPILE) -c $<


# rule to make libbuffers
libbuffers.a: ${libbuffers_OBJECTS} Makefile
	@rm -f libbuffers.a
	@${AR} cru libbuffers.a $(libbuffers_OBJECTS)
	@$(RANLIB) libbuffers.a
	@cp libbuffers.a ${top_builddir}/lib/libbuffers.a

# rule to generate .d files

$(addsuffix .d,$(libbuffers_TARGETS)): %.d: ${srcdir}/%.c Makefile
	@$(CCDEP) ${DEPFLAGS} ${INCLUDES} $< > $@

# rule to make dependencies

dep: ${addsuffix .d, ${libbuffers_TARGETS}}

# rules to clean

compile-clean: Makefile
	rm -f ${$(addsuffix _OBJECTS, ${LIBRARIES})} *.d

clean: compile-clean
	rm -f $(addsuffix .a, ${LIBRARIES})
	rm -f ../lib/libbuffers.a

distclean: clean
	rm -f Makefile


.PHONY: all dep clean compile-clean distclean debug all-debug profile all-profile
